@page "/"
@using CSEInvestmentTool.Application.Services
@using CSEInvestmentTool.Domain.Models
@using CSEInvestmentTool.Infrastructure.Services
@inject IDataCollectionService DataService
@inject IStockScoringService ScoringService
@inject IInvestmentAllocationService AllocationService

<div class="container mx-auto px-4">
    <h1 class="text-2xl font-bold mb-4">CSE Investment Recommendations</h1>

    @if (_loading)
    {
        <div class="flex justify-center items-center h-32">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"></div>
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
            <div class="bg-blue-50 p-4 rounded-lg">
                <h2 class="text-lg font-semibold mb-2">Monthly Investment Budget</h2>
                <p class="text-2xl font-bold">LKR 50,000.00</p>
            </div>
            <div class="bg-green-50 p-4 rounded-lg">
                <h2 class="text-lg font-semibold mb-2">Recommended Stocks</h2>
                <p class="text-2xl font-bold">@(_recommendations?.Count ?? 0)</p>
            </div>
        </div>

        @if (_recommendations?.Any() == true)
        {
            <div class="bg-white shadow-lg rounded-lg overflow-hidden">
                <table class="min-w-full">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Stock</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Score</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Allocation</th>
                            <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Reason</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var recommendation in _recommendations)
                        {
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="font-medium text-gray-900">@recommendation.Stock?.Symbol</div>
                                    <div class="text-sm text-gray-500">@recommendation.Stock?.CompanyName</div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    @{
                                        var score = _scores?.FirstOrDefault(s => s.StockId == recommendation.StockId);
                                        <div class="text-sm font-medium text-gray-900">@(score?.TotalScore.ToString("N1") ?? "N/A")</div>
                                    }
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="text-sm font-medium text-gray-900">
                                        LKR @recommendation.RecommendedAmount.ToString("N2")
                                    </div>
                                </td>
                                <td class="px-6 py-4">
                                    <div class="text-sm text-gray-900">@recommendation.RecommendationReason</div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="mt-8">
                <h2 class="text-xl font-semibold mb-4">Investment Details</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    @foreach (var recommendation in _recommendations)
                    {
                        var score = _scores?.FirstOrDefault(s => s.StockId == recommendation.StockId);
                        <div class="bg-white shadow rounded-lg p-4">
                            <h3 class="font-medium text-lg mb-2">@recommendation.Stock?.Symbol</h3>
                            <div class="grid grid-cols-2 gap-2 text-sm">
                                <div>P/E Score:</div>
                                <div>@(score?.PEScore.ToString("N1") ?? "N/A")</div>
                                <div>ROE Score:</div>
                                <div>@(score?.ROEScore.ToString("N1") ?? "N/A")</div>
                                <div>Dividend Score:</div>
                                <div>@(score?.DividendYieldScore.ToString("N1") ?? "N/A")</div>
                                <div>Debt/Equity Score:</div>
                                <div>@(score?.DebtEquityScore.ToString("N1") ?? "N/A")</div>
                                <div>Profit Margin Score:</div>
                                <div>@(score?.ProfitMarginScore.ToString("N1") ?? "N/A")</div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4">
                <div class="flex">
                    <div class="ml-3">
                        <p class="text-sm text-yellow-700">
                            No recommendations available at this time. Please try again later.
                        </p>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    private bool _loading = true;
    private List<Stock>? _stocks;
    private List<StockScore>? _scores;
    private List<InvestmentRecommendation>? _recommendations;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _loading = true;
            
            // Get all stocks
            _stocks = await DataService.GetAllStocksAsync();
            
            // Get fundamental data and calculate scores
            _scores = new List<StockScore>();
            foreach (var stock in _stocks)
            {
                var fundamentalData = await DataService.GetFundamentalDataAsync(stock.Symbol);
                var score = ScoringService.CalculateScore(fundamentalData);
                _scores.Add(score);
            }
            
            // Calculate investment recommendations
            _recommendations = AllocationService.CalculateInvestmentAllocations(
                _scores,
                DateTime.UtcNow.Date);
        }
        catch (Exception ex)
        {
            // Handle error (show error message)
            Console.Error.WriteLine(ex);
        }
        finally
        {
            _loading = false;
        }
    }
}