@page "/stocks/add"
@using CSEInvestmentTool.Application.Services
@using CSEInvestmentTool.Domain.Models
@using CSEInvestmentTool.Application.Interfaces
@using CSEInvestmentTool.Application.Models
@using CSEInvestmentTool.Web.Helpers
@inject IStockRepository StockRepository
@inject IFundamentalDataRepository FundamentalRepository
@inject IStockScoringService ScoringService
@inject IStockScoreRepository ScoreRepository
@inject IStockCalculationService StockCalculationService
@inject NavigationManager NavigationManager
@inject ILogger<AddStock> Logger

<div class="max-w-3xl mx-auto p-6 bg-white rounded-lg shadow-sm">
    <h2 class="text-2xl font-bold mb-6">Add New Stock</h2>

    @if (!string.IsNullOrEmpty(_errorMessage))
    {
        <div class="mb-4 p-4 border-l-4 border-red-500 bg-red-50 rounded">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                    </svg>
                </div>
                <div class="ml-3">
                    <h3 class="text-sm font-medium text-red-800">Error Adding Stock</h3>
                    <p class="text-sm text-red-700 mt-1">@_errorMessage</p>
                </div>
            </div>
        </div>
    }

    <EditForm Model="@_stockEntry" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Stock Information -->
            <div class="space-y-6 p-6 bg-gray-50 rounded-lg">
                <h3 class="text-lg font-semibold">Stock Information</h3>

                <div>
                    <label class="block text-sm font-medium text-gray-700">Symbol</label>
                    <div class="flex mt-1">
                        <InputText @bind-Value="_stockEntry.Stock.Symbol"
                                   @oninput="OnSymbolInputAsync"
                                   class="flex-grow rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                        @if (_loadingSymbol)
                        {
                            <div class="ml-2 flex items-center">
                                <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-gray-900"></div>
                            </div>
                        }
                        else if (_symbolFound)
                        {
                            <div class="ml-2 flex items-center">
                                <svg class="h-5 w-5 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                </svg>
                            </div>
                        }
                    </div>
                    <ValidationMessage For="@(() => _stockEntry.Stock.Symbol)" class="text-red-500 text-sm" />
                    @if (_symbolFound && _relatedSymbols.Count > 1)
                    {
                        <div class="mt-1 text-xs text-indigo-600">
                            Company has multiple stock types. All will be considered for NAV calculation.
                        </div>
                    }
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700">Company Name</label>
                    <InputText @bind-Value="_stockEntry.Stock.CompanyName"
                               class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                    <ValidationMessage For="@(() => _stockEntry.Stock.CompanyName)" class="text-red-500 text-sm" />
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700">Sector</label>
                    <InputSelect @bind-Value="_stockEntry.Stock.Sector"
                                 class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
                        <option value="">Select a Sector</option>
                        @foreach (var sector in _sectors)
                        {
                            <option value="@sector">@sector</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => _stockEntry.Stock.Sector)" class="text-red-500 text-sm" />
                </div>
            </div>

            <!-- Fundamental Data -->
            <div class="space-y-6 p-6 bg-gray-50 rounded-lg">
                <h3 class="text-lg font-semibold">Fundamental Data</h3>

                <div>
                    <label class="block text-sm font-medium text-gray-700">Market Price (LKR)</label>
                    <div class="relative mt-1">
                        <div class="flex">
                            <InputNumber @bind-Value="_stockEntry.Fundamentals.MarketPrice"
                                         class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 bg-gray-100"
                                         disabled="true" />
                            <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                                <span class="text-gray-500 sm:text-sm">Auto-fetched</span>
                            </div>
                        </div>
                        <!-- Display formatted market price -->
                        <div class="mt-1 text-xs text-gray-600">
                            Formatted: @_stockEntry.Fundamentals.MarketPrice.ToTwoDecimalPlaces() LKR
                        </div>
                    </div>
                    <ValidationMessage For="@(() => _stockEntry.Fundamentals.MarketPrice)" class="text-red-500 text-sm" />
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700">NAV (LKR)</label>
                    <div class="relative mt-1">
                        <div class="flex">
                            <InputNumber @bind-Value="_stockEntry.Fundamentals.NAV"
                                         class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 bg-gray-100"
                                         disabled="true" />
                            <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                                <span class="text-gray-500 sm:text-sm">Auto-calculated</span>
                            </div>
                        </div>
                        <!-- Display formatted NAV -->
                        <div class="mt-1 text-xs text-gray-600">
                            Formatted: @_stockEntry.Fundamentals.NAV.ToTwoDecimalPlaces() LKR
                        </div>
                    </div>
                    <ValidationMessage For="@(() => _stockEntry.Fundamentals.NAV)" class="text-red-500 text-sm" />
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700">EPS (LKR)</label>
                    <InputNumber @bind-Value="_stockEntry.Fundamentals.EPS"
                                 class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                    <ValidationMessage For="@(() => _stockEntry.Fundamentals.EPS)" class="text-red-500 text-sm" />
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700">Annual Dividend (LKR)</label>
                    <InputNumber @bind-Value="_stockEntry.Fundamentals.AnnualDividend"
                                 class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                    <ValidationMessage For="@(() => _stockEntry.Fundamentals.AnnualDividend)" class="text-red-500 text-sm" />
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700">Total Liabilities (LKR)</label>
                    <div class="relative mt-1">
                        <div class="flex">
                            <input type="text"
                                   value="@_formattedLiabilities"
                                   @oninput="OnLiabilitiesInput"
                                   class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                            <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                                <span class="text-gray-500 sm:text-sm">e.g. 1.5M, 2.3B</span>
                            </div>
                        </div>
                        <!-- Display actual numeric value -->
                        <div class="mt-1 text-xs text-gray-600">
                            Value: @_stockEntry.Fundamentals.TotalLiabilities.ToString("N0") LKR
                        </div>
                    </div>
                    <ValidationMessage For="@(() => _stockEntry.Fundamentals.TotalLiabilities)" class="text-red-500 text-sm" />
                </div>

                <div>
                    <label class="block text-sm font-medium text-gray-700">Total Equity (LKR)</label>
                    <div class="relative mt-1">
                        <div class="flex">
                            <input type="text"
                                   value="@_formattedEquity"
                                   @oninput="OnEquityInput"
                                   class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500" />
                            <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
                                <span class="text-gray-500 sm:text-sm">e.g. 1.5M, 2.3B</span>
                            </div>
                        </div>
                        <!-- Display actual numeric value -->
                        <div class="mt-1 text-xs text-gray-600">
                            Value: @_stockEntry.Fundamentals.TotalEquity.ToString("N0") LKR
                        </div>
                    </div>
                    <ValidationMessage For="@(() => _stockEntry.Fundamentals.TotalEquity)" class="text-red-500 text-sm" />
                </div>
            </div>
        </div>

        @if (_relatedSymbols.Count > 1)
        {
            <div class="mt-6 p-4 bg-indigo-50 rounded-lg">
                <h4 class="text-sm font-medium text-indigo-800 mb-2">Related Stock Symbols</h4>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-indigo-200">
                        <thead class="bg-indigo-50">
                            <tr>
                                <th scope="col" class="px-3 py-2 text-left text-xs font-medium text-indigo-700 uppercase tracking-wider">Symbol</th>
                                <th scope="col" class="px-3 py-2 text-right text-xs font-medium text-indigo-700 uppercase tracking-wider">Issued Quantity</th>
                                <th scope="col" class="px-3 py-2 text-right text-xs font-medium text-indigo-700 uppercase tracking-wider">Market Price (LKR)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var relatedSymbol in _relatedSymbols)
                            {
                                <tr class="bg-indigo-50">
                                    <td class="px-3 py-2 whitespace-nowrap text-sm text-indigo-800">@relatedSymbol.Symbol</td>
                                    <td class="px-3 py-2 whitespace-nowrap text-sm text-right text-indigo-800">@relatedSymbol.IssuedQuantity.ToString("N0")</td>
                                    <td class="px-3 py-2 whitespace-nowrap text-sm text-right text-indigo-800">@relatedSymbol.MarketPrice.ToTwoDecimalPlaces()</td>
                                </tr>
                            }
                            <tr class="bg-indigo-100">
                                <td class="px-3 py-2 whitespace-nowrap text-sm font-bold text-indigo-900">Total</td>
                                <td class="px-3 py-2 whitespace-nowrap text-sm font-bold text-right text-indigo-900">@_totalIssuedQuantity.ToString("N0")</td>
                                <td class="px-3 py-2 whitespace-nowrap text-sm text-right text-indigo-900"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p class="text-xs text-indigo-700 mt-2">
                    * Total issued quantity is used for NAV calculation (Total Equity / Total Issued Quantity)
                </p>
            </div>
        }

        <div class="mt-6 flex justify-end space-x-4">
            <button type="button"
                    class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                    @onclick="NavigateBack">
                Cancel
            </button>
            <button type="submit"
                    class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                Save Stock
            </button>
        </div>
    </EditForm>
</div>