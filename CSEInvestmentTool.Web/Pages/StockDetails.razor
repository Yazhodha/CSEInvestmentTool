@page "/stocks/{Id:int}"
@using CSEInvestmentTool.Domain.Models
@using CSEInvestmentTool.Application.Interfaces
@using CSEInvestmentTool.Web.Helpers
@inject IStockRepository StockRepository
@inject IFundamentalDataRepository FundamentalRepository
@inject IStockScoreRepository ScoreRepository
@inject NavigationManager NavigationManager
@inject ILogger<StockDetails> Logger

<div class="space-y-6">
    @if (_loading)
    {
        <div class="flex justify-center items-center h-32">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"></div>
        </div>
    }
    else if (_stock == null)
    {
        <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4">
            <p class="text-sm text-yellow-700">Stock not found.</p>
        </div>
    }
    else
    {
        <div class="flex justify-between items-center">
            <div>
                <h1 class="text-2xl font-bold text-gray-900">@_stock.Symbol</h1>
                <p class="mt-1 text-sm text-gray-500">@_stock.CompanyName</p>
            </div>
            <div class="space-x-4">
                <button @onclick="NavigateToEdit"
                        class="px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md shadow-sm hover:bg-indigo-700">
                    Update Fundamental Data
                </button>
                <button @onclick="NavigateBack"
                        class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50">
                    Back
                </button>
                <button @onclick="DeleteStock"
                        class="px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700">
                    Delete Stock
                </button>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
            <!-- Basic Stock Information -->
            <div class="bg-white shadow overflow-hidden rounded-lg">
                <div class="px-4 py-5 sm:px-6 bg-gray-50">
                    <h3 class="text-lg leading-6 font-medium text-gray-900">Stock Information</h3>
                </div>
                <div class="border-t border-gray-200 px-4 py-5 sm:p-6">
                    <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
                        <div>
                            <dt class="text-sm font-medium text-gray-500">Symbol</dt>
                            <dd class="mt-1 text-sm text-gray-900">@_stock.Symbol</dd>
                        </div>
                        <div>
                            <dt class="text-sm font-medium text-gray-500">Company Name</dt>
                            <dd class="mt-1 text-sm text-gray-900">@_stock.CompanyName</dd>
                        </div>
                        <div>
                            <dt class="text-sm font-medium text-gray-500">Sector</dt>
                            <dd class="mt-1 text-sm text-gray-900">@(_stock.Sector ?? "N/A")</dd>
                        </div>
                        <div>
                            <dt class="text-sm font-medium text-gray-500">Status</dt>
                            <dd class="mt-1 text-sm text-gray-900">
                                @if (_stock.IsActive)
                                {
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Active</span>
                                }
                                else
                                {
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">Inactive</span>
                                }
                            </dd>
                        </div>
                        <div>
                            <dt class="text-sm font-medium text-gray-500">Last Updated</dt>
                            <dd class="mt-1 text-sm text-gray-900">@_stock.LastUpdated.ToString("yyyy-MM-dd HH:mm")</dd>
                        </div>
                    </dl>
                </div>
            </div>

            <!-- Stock Score Information -->
            @if (_stockScore != null)
            {
                <div class="bg-white shadow overflow-hidden rounded-lg">
                    <div class="px-4 py-5 sm:px-6 bg-gray-50">
                        <h3 class="text-lg leading-6 font-medium text-gray-900">Stock Score</h3>
                    </div>
                    <div class="border-t border-gray-200 px-4 py-5 sm:p-6">
                        <div class="mb-6">
                            <div class="text-3xl font-bold text-center @GetScoreColorClass(_stockScore.TotalScore)">
                                @_stockScore.TotalScore.ToString("N1")
                            </div>
                            <p class="text-sm text-center text-gray-500">Score Date: @_stockScore.ScoreDate.ToString("yyyy-MM-dd")</p>
                        </div>

                        <dl class="grid grid-cols-1 gap-x-4 gap-y-4 sm:grid-cols-2">
                            <div>
                                <dt class="text-sm font-medium text-gray-500">P/E Score</dt>
                                <dd class="mt-1 text-sm font-semibold @GetScoreColorClass(_stockScore.PEScore)">@_stockScore.PEScore.ToString("N1")</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">ROE Score</dt>
                                <dd class="mt-1 text-sm font-semibold @GetScoreColorClass(_stockScore.ROEScore)">@_stockScore.ROEScore.ToString("N1")</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Dividend Yield Score</dt>
                                <dd class="mt-1 text-sm font-semibold @GetScoreColorClass(_stockScore.DividendYieldScore)">@_stockScore.DividendYieldScore.ToString("N1")</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Debt/Equity Score</dt>
                                <dd class="mt-1 text-sm font-semibold @GetScoreColorClass(_stockScore.DebtEquityScore)">@_stockScore.DebtEquityScore.ToString("N1")</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">NAV/Price Score</dt>
                                <dd class="mt-1 text-sm font-semibold @GetScoreColorClass(_stockScore.ProfitMarginScore)">@_stockScore.ProfitMarginScore.ToString("N1")</dd>
                            </div>
                        </dl>
                    </div>
                </div>
            }

            <!-- Fundamental Data -->
            @if (_fundamentalData != null)
            {
                <div class="bg-white shadow overflow-hidden rounded-lg">
                    <div class="px-4 py-5 sm:px-6 bg-gray-50">
                        <h3 class="text-lg leading-6 font-medium text-gray-900">Fundamental Data</h3>
                    </div>
                    <div class="border-t border-gray-200 px-4 py-5 sm:p-6">
                        <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Market Price</dt>
                                <dd class="mt-1 text-sm text-gray-900">@_fundamentalData.MarketPrice.ToTwoDecimalPlaces() LKR</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">NAV</dt>
                                <dd class="mt-1 text-sm text-gray-900">@_fundamentalData.NAV.ToTwoDecimalPlaces() LKR</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">EPS</dt>
                                <dd class="mt-1 text-sm text-gray-900">@_fundamentalData.EPS.ToTwoDecimalPlaces() LKR</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Annual Dividend</dt>
                                <dd class="mt-1 text-sm text-gray-900">@_fundamentalData.AnnualDividend.ToTwoDecimalPlaces() LKR</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Total Liabilities</dt>
                                <dd class="mt-1 text-sm text-gray-900">
                                    <span class="mr-1">@_fundamentalData.TotalLiabilities.ToShortForm() LKR</span>
                                    <span class="text-xs text-gray-500">(@_fundamentalData.TotalLiabilities.ToString("N0") LKR)</span>
                                </dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Total Equity</dt>
                                <dd class="mt-1 text-sm text-gray-900">
                                    <span class="mr-1">@_fundamentalData.TotalEquity.ToShortForm() LKR</span>
                                    <span class="text-xs text-gray-500">(@_fundamentalData.TotalEquity.ToString("N0") LKR)</span>
                                </dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Data Date</dt>
                                <dd class="mt-1 text-sm text-gray-900">@_fundamentalData.Date.ToString("yyyy-MM-dd")</dd>
                            </div>
                        </dl>
                    </div>
                </div>

                <!-- Calculated Ratios -->
                <div class="bg-white shadow overflow-hidden rounded-lg">
                    <div class="px-4 py-5 sm:px-6 bg-gray-50">
                        <h3 class="text-lg leading-6 font-medium text-gray-900">Calculated Ratios</h3>
                    </div>
                    <div class="border-t border-gray-200 px-4 py-5 sm:p-6">
                        <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
                            <div>
                                <dt class="text-sm font-medium text-gray-500">P/E Ratio</dt>
                                <dd class="mt-1 text-sm text-gray-900">@(_fundamentalData.PERatio?.ToTwoDecimalPlaces() ?? "N/A")</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Return on Equity (ROE)</dt>
                                <dd class="mt-1 text-sm text-gray-900">@(_fundamentalData.ROE.HasValue ? $"{_fundamentalData.ROE.Value.ToTwoDecimalPlaces()}%" : "N/A")</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Dividend Yield</dt>
                                <dd class="mt-1 text-sm text-gray-900">@(_fundamentalData.DividendYield.HasValue ? $"{_fundamentalData.DividendYield.Value.ToTwoDecimalPlaces()}%" : "N/A")</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Debt to Equity Ratio</dt>
                                <dd class="mt-1 text-sm text-gray-900">@(_fundamentalData.DebtToEquityRatio?.ToTwoDecimalPlaces() ?? "N/A")</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Price to Book Value (PBV)</dt>
                                <dd class="mt-1 text-sm text-gray-900">@(_fundamentalData.PBV?.ToTwoDecimalPlaces() ?? "N/A")</dd>
                            </div>
                            <div>
                                <dt class="text-sm font-medium text-gray-500">Return (%)</dt>
                                <dd class="mt-1 text-sm text-gray-900">@(_fundamentalData.Return.HasValue ? $"{_fundamentalData.Return.Value.ToTwoDecimalPlaces()}%" : "N/A")</dd>
                            </div>
                        </dl>
                    </div>
                </div>

            }
            else
            {
                <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 lg:col-span-2">
                    <p class="text-sm text-yellow-700">No fundamental data available for this stock.</p>
                </div>
            }
        </div>

        @if (_relatedSymbols.Count > 1)
        {
            <div class="bg-white shadow overflow-hidden rounded-lg">
                <div class="px-4 py-5 sm:px-6 bg-gray-50">
                    <h3 class="text-lg leading-6 font-medium text-gray-900">Related Stock Symbols</h3>
                </div>
                <div class="border-t border-gray-200 px-4 py-5 sm:p-6">
                    <p class="text-sm text-gray-600 mb-4">
                        This company has multiple stock types. The following breakdown shows all related symbols and their issued quantities.
                        The total issued quantity is used in the NAV calculation (Total Equity / Total Issued Quantity).
                    </p>

                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th scope="col" class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Symbol</th>
                                    <th scope="col" class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Issued Quantity</th>
                                    <th scope="col" class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Market Price (LKR)</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                @foreach (var symbol in _relatedSymbols)
                                {
                                    <tr>
                                        <td class="px-4 py-3 whitespace-nowrap text-sm font-medium text-gray-900">
                                            @symbol.Symbol
                                            @if (symbol.Symbol == _stock?.Symbol)
                                            {
                                                <span class="ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800">
                                                    Current
                                                </span>
                                            }
                                        </td>
                                        <td class="px-4 py-3 whitespace-nowrap text-sm text-right text-gray-900">
                                            @symbol.IssuedQuantity.ToString("N0")
                                        </td>
                                        <td class="px-4 py-3 whitespace-nowrap text-sm text-right text-gray-900">
                                            @symbol.MarketPrice.ToTwoDecimalPlaces()
                                        </td>
                                    </tr>
                                }
                                <tr class="bg-gray-50">
                                    <td class="px-4 py-3 whitespace-nowrap text-sm font-bold text-gray-900">Total</td>
                                    <td class="px-4 py-3 whitespace-nowrap text-sm font-bold text-right text-gray-900">
                                        @_totalIssuedQuantity.ToString("N0")
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap"></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }

        @if (_showDeleteConfirmation)
        {
            <div class="fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50">
                <div class="bg-white p-6 rounded-lg shadow-xl max-w-md w-full mx-4">
                    <h3 class="text-lg font-medium text-gray-900 mb-4">Delete Stock</h3>
                    <p class="text-sm text-gray-500 mb-4">
                        Are you sure you want to delete @_stock.Symbol? This action cannot be undone.
                    </p>
                    <div class="flex justify-end space-x-4">
                        <button @onclick="() => _showDeleteConfirmation = false"
                                class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50">
                            Cancel
                        </button>
                        <button @onclick="ConfirmDelete"
                                class="px-4 py-2 text-sm font-medium text-white bg-red-600 border border-transparent rounded-md shadow-sm hover:bg-red-700">
                            Delete
                        </button>
                    </div>
                </div>
            </div>
        }
    }
</div>